{
  "cortes": [
    "Fundamentos",
    "Estructuras",
    "Arreglos"
  ],
  "corte1": [
    {
      "icon": "mdi-chart-line",
      "title": "Algoritmos",
      "link": "/algorithmsView"
    },
    {
      "icon": "mdi-arrow-u-right-bottom-bold",
      "title": "Ciclo de vida del software",
      "link": "/softwareCycleView"
    },
    {
      "icon": "mdi-identifier",
      "title": "Identificadores",
      "link": "/identifiersView"
    },
    {
      "icon": "mdi-database",
      "title": "Tipos de datos",
      "link": "/typeOfDataView"
    },
    {
      "icon": "mdi-plus-minus-variant",
      "title": "Tipos de operadores",
      "link": "/typeOfOperatorsView"
    },
    {
      "icon": "mdi-vector-arrange-below",
      "title": "Estructura secuencial",
      "link": "/"
    },
    {
      "icon": "mdi-arrange-send-backward",
      "title": "Estructura selectiva",
      "link": "/"
    }
  ],
  "corte2": [
    {
      "icon": "mdi-chart-line",
      "title": "Estructura repetitiva",
      "link": "/"
    },
    {
      "icon": "mdi-variable",
      "title": "Variables globales",
      "link": "/"
    },
    {
      "icon": "mdi-function",
      "title": "Funciones definidas",
      "link": "/"
    }
  ],
  "corte3": [
    {
      "icon": "mdi-arrange-bring-to-front",
      "title": "Tipo de dato lista",
      "link": "/"
    },
    {
      "icon": "mdi-calculator-variant",
      "title": "Operaciones",
      "link": "/"
    },
    {
      "icon": "mdi-sitemap-outline",
      "title": "Recorridos",
      "link": "/"
    },
    {
      "icon": "mdi-view-list-outline",
      "title": "Listas paralelas",
      "link": "/"
    }
  ],
  "headerSection": {
    "title": "Universidad de Ibagué"
  },
  "principalPage": {
    "title": "Fundamentos de la lógica",
    "paragraph": "La lógica es una ciencia que estudia la estructura o formas del pensamiento humano (como proposiciones, conceptos y razonamientos) para establecer leyes y principios válidos para obtener criterios de verdad.",
    "paragraph2": "La lógica juega un papel importante en la informática (bases de datos, complejidad computacional, lenguajes de programación, inteligencia artificial, diseño y verificación de sistemas hardware y software, etc.) Es sin duda uno de los fundamentos que proporcionan la madurez y agilidad necesarias para asimilar los conceptos, lenguajes, técnicas y herramientas informáticas que surjan en el futuro.",
    "paragraph3": "Prueba lo aprendido hasta ahora con la siguiente actividad:",
    "button": "Aprenda Más"
  },
  "algorithmPage": {
    "title": "Algoritmos",
    "paragraph": "Un algoritmo es un conjunto de instrucciones definidas, ordenadas y acotadas para resolver un problema, realizar un cálculo o desarrollar una tarea a partir de un estado e información iniciales, se siguen una serie de pasos ordenados para llegar a la solución de una situación. Utilizamos numerosos algoritmos para resolver problemas en nuestra vida cotidiana como, por ejemplo: ",
    "paragraph2": "Un algoritmo informático parte de un estado inicial y de unos valores de entrada, sigue una serie de pasos sucesivos y llega a un estado final en el que ha obtenido una solución. En este sentido las tres partes de un algoritmo son: ",
    "paragraphTitleList1": "Input (entrada).",
    "paragraphTitleList2": "Proceso.",
    "paragraphTitleList3": "Output (salida).",
    "paragraphList1": "Información que damos al algoritmo con el que va a trabajar para ofrecer la solución esperada. ",
    "paragraphList2": "Conjunto de pasos para que, a partir de los datos de entrada, llegue a la solución de la situación. ",
    "paragraphList3": "Resultados, a partir de la transformación de los valores de entrada durante el proceso. "
  },
  "softwareLifeCyclePage": {
    "title": "Ciclo de vida del software y Proceso de análisis y diseño para la solución de problemas",
    "paragraph": "En 1945, el matemático George Polya escribió el primer libro que describe la utilización de técnicas heurísticas en la resolución de problemas. En dicho libro llamado How to solve it, se presentan las etapas que son un reflejo del proceso que se sigue a la hora de resolver cualquier tipo de problema. Estas etapas son:",
    "list": [
      "Comprender el problema (análisis)",
      "Plantear una posible solución, considerando soluciones alternativas (diseño)",
      "Llevar a cabo la solución planteada (implementación)",
      "Comprobar que el resultado obtenido es correcto (pruebas)"
    ],
    "paragraph2": "Con lo anterior, cualquier software va pasando por una serie de fases a lo largo de su vida. Su ciclo de vida comprende una serie de etapas entre las que se encuentran las etapas para el proceso de análisis y diseño para la solución de problemas y las siguientes:",
    "list2": [
      "Planificación: En esta fase inicial de cualquier proyecto se incluyen actividades como la determinación del ámbito del proyecto, la realización de un estudio de viabilidad, el análisis de los riesgos asociados al proyecto, una estimación del coste del proyecto, su planificación temporal y la asignación de recursos a las distintas etapas del proyecto.",
      "Análisis: Es el proceso mediante el cual se intenta descubrir qué es lo que realmente se necesita y se llega a una comprensión adecuada de los requerimientos del sistema. Esta etapa es de gran importancia debido a que si no se sabe con precisión qué es lo que se necesita, no se podrá realizar el proceso de desarrollo.",
      "Diseño: Los modelos que se utilizan en la fase de diseño representan las características del sistema que nos permitirán implementarlo de forma efectiva, en otras palabras en esta etapa se define el cómo se hará el desarrollo y lo que se implementará para realizar el mismo. El diseño es una etapa compleja y el proceso de diseño ha de realizarse de forma iterativa.",
      "Implementación: Antes de empezar a escribir una línea de código o de crear una tabla en nuestra base de datos, es de gran importancia haber comprendido bien el problema que se pretende resolver y haber aplicado principios básicos de diseño que nos permitan construir un software de calidad. Para esta fase, se deben seleccionar las herramientas adecuadas, un entorno de desarrollo que facilite el trabajo y un lenguaje de programación apropiado para el tipo de sistema que se vaya a construir. La elección de estas herramientas dependerá en gran parte de las decisiones de diseño que se hayan tomado.",
      "Pruebas: En esta etapa se tiene como objetivo detectar los errores que se hayan podido cometer en las etapas anteriores del proyecto y corregirlos. Es importante detectar los errores antes de que el usuario final tenga que enfrentarse a ellos. En ese sentido, una prueba es un éxito cuando se detecta un error.",
      "Instalación o despliegue: Para esta etapa se debe planificar el entorno en el que el sistema debe funcionar, tanto hardware como software. Además, para asegurar el correcto funcionamiento del sistema, resulta esencial que se tengan en cuenta las dependencias que pueden existir entre los distintos componentes del sistema y sus versiones.",
      "Uso y mantenimiento: Consume típicamente del 40 al 80 por ciento de los recursos de una empresa de desarrollo de software. De hecho, con un 60% de media, es probablemente la etapa más importante del ciclo de vida del software."
    ]
  },
  "IdentifiersPage": {
    "title": "Identificadores: variables y constantes",
    "paragraph": "Las variables y constantes permiten almacenar datos durante la ejecucion de un programa.",
    "titleCardVar": "Variable",
    "titleCardConst": "Constante",
    "tableVar": [
      "Se pueden usar variables en los lenguajes de programacion para almacenar diferentes tipos de datos como numeros, palabras y cadenas en la memoria del ordenador.",
      "El valor de una variable puede ser modificada."
    ],
    "tableConst": [
      "A las constantes se les debe asignar un valor al momento de declararlas.",
      "El valor de una constante no puede ser modificada."
    ]
  },
  "typeOfDataPage": {
    "title": "Tipos de datos",
    "paragraph": "Un tipo de datos es un medio de clasificar el tipo de datos que una variable u objeto puede contener en la programación. Los tipos de datos son un factor importante en todos los lenguajes de programación en informática, incluyendo C#, C++, JavaScript y Visual Basic. Cuando los programadores desarrollan software, ya sea de escritorio o basado en la web, los tipos de datos deben asignarse y aplicarse correctamente para garantizar resultados adecuados y un programa libre de errores.",
    "paragraph2": "El tipo de datos determina qué operaciones pueden ejecutarse con seguridad para desarrollar, transponer y aplicar la variable a otro cálculo."
  },
  "typeOfOperatorsPage": {
    "title": "Tipos de operadores",
    "paragraph": "Las expresiones realizan acciones específicas, según un operador, con uno o dos operadores. Un operando puede ser una constante, una variable o el resultado de una función y pueden ser aritméticos, lógicos y relacionales. La funcionalidad de un operador puede variar según el tipo de datos de los operandos especificados en la expresión.",
    "paragraph2": "Prueba lo aprendido aquí",
    "titleList": [
      "Operadores aritméticos",
      "Operadores relacionales",
      "Operadores lógicos"
    ],
    "textList1": [
      "Realizan operaciones matemáticas, como sumas o restas con operandos.",
      "Hay dos tipos de operadores matemáticos, los operadores unarios y los operadores binarios.",
      "Los operadores unarios son operadores aritméticos que realizan una acción sobre un solo operando. Ejemplo:",
      "A = 1;  B = A++; // A será igual a 1, B será igual a 2;"
    ],
    "textList2": [
      "Comparan el primer operando con el segundo para probar la validez de la relación especificada.",
      "< : Menor que",
      "> : Mayor que",
      "== : Igual",
      "!= : Diferente",
      "<= : Menor o Igual que",
      ">= : Mayor o Igual que"
    ],
    "textList3": [
      "Devuelven el valor TRUE (1) o FALSE (0). Se tienen 4 operadores lógicos:",
      "AND: Verdadero sólo si los dos elementos son verdaderos.",
      "OR: Verdadero si cualquiera de los elementos es verdadero.",
      "XOR: Verdadero si cualquiera de las expresiones (pero no ambas) es verdadera.",
      "NOT: Cambia el valor de Falso a Verdadero y viceversa."
    ]
  }
}